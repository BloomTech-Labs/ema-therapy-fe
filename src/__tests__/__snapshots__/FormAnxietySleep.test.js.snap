// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormAnxietySleep component handleChange gets called when a number is entered into the sleep hours field 1`] = `
Array [
  <div
    className="header"
  >
    <button
      className="back"
      onClick={[Function]}
      type="button"
    >
      ←
    </button>
    <p>
      How stressed are you this moment from 1 - 10?
    </p>
  </div>,
  <div
    className="inputs-section"
  >
    <div
      className="inputs"
    >
      <p>
        Anxiety Level
      </p>
      <div
        className="ant-slider"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ant-slider-rail"
          style={Object {}}
        />
        <div
          className="ant-slider-track"
          style={
            Object {
              "left": "0%",
              "right": "auto",
              "width": "66.66666666666666%",
            }
          }
        />
        <div
          className="ant-slider-step"
        />
        <div
          aria-disabled={false}
          aria-valuemax={10}
          aria-valuemin={1}
          aria-valuenow={7}
          className="ant-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          role="slider"
          style={
            Object {
              "left": "66.66666666666666%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={0}
        />
        <div
          className="ant-slider-mark"
        />
      </div>
    </div>
    <div
      className="inputs"
    >
      <label
        htmlFor="sleep"
      >
        Hours of sleep:
        <input
          id="sleep"
          name="sleep"
          onChange={[MockFunction]}
          type="number"
          value="testString"
        />
      </label>
    </div>
  </div>,
  <div
    className="footer"
  >
    <button
      className="main-button"
      type="submit"
    >
      Done
    </button>
  </div>,
]
`;

exports[`FormAnxietySleep component handleView gets called with correct string when clicking back button 1`] = `
Array [
  <div
    className="header"
  >
    <button
      className="back"
      onClick={[Function]}
      type="button"
    >
      ←
    </button>
    <p>
      How stressed are you this moment from 1 - 10?
    </p>
  </div>,
  <div
    className="inputs-section"
  >
    <div
      className="inputs"
    >
      <p>
        Anxiety Level
      </p>
      <div
        className="ant-slider"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ant-slider-rail"
          style={Object {}}
        />
        <div
          className="ant-slider-track"
          style={
            Object {
              "left": "0%",
              "right": "auto",
              "width": "66.66666666666666%",
            }
          }
        />
        <div
          className="ant-slider-step"
        />
        <div
          aria-disabled={false}
          aria-valuemax={10}
          aria-valuemin={1}
          aria-valuenow={7}
          className="ant-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          role="slider"
          style={
            Object {
              "left": "66.66666666666666%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={0}
        />
        <div
          className="ant-slider-mark"
        />
      </div>
    </div>
    <div
      className="inputs"
    >
      <label
        htmlFor="sleep"
      >
        Hours of sleep:
        <input
          id="sleep"
          name="sleep"
          onChange={[Function]}
          type="number"
          value="testString"
        />
      </label>
    </div>
  </div>,
  <div
    className="footer"
  >
    <button
      className="main-button"
      type="submit"
    >
      Done
    </button>
  </div>,
]
`;

exports[`FormAnxietySleep component renders correctly 1`] = `
Array [
  <div
    className="header"
  >
    <button
      className="back"
      onClick={[Function]}
      type="button"
    >
      ←
    </button>
    <p>
      How stressed are you this moment from 1 - 10?
    </p>
  </div>,
  <div
    className="inputs-section"
  >
    <div
      className="inputs"
    >
      <p>
        Anxiety Level
      </p>
      <div
        className="ant-slider"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ant-slider-rail"
          style={Object {}}
        />
        <div
          className="ant-slider-track"
          style={
            Object {
              "left": "0%",
              "right": "auto",
              "width": "66.66666666666666%",
            }
          }
        />
        <div
          className="ant-slider-step"
        />
        <div
          aria-disabled={false}
          aria-valuemax={10}
          aria-valuemin={1}
          aria-valuenow={7}
          className="ant-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          role="slider"
          style={
            Object {
              "left": "66.66666666666666%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={0}
        />
        <div
          className="ant-slider-mark"
        />
      </div>
    </div>
    <div
      className="inputs"
    >
      <label
        htmlFor="sleep"
      >
        Hours of sleep:
        <input
          id="sleep"
          name="sleep"
          onChange={[Function]}
          type="number"
          value="testString"
        />
      </label>
    </div>
  </div>,
  <div
    className="footer"
  >
    <button
      className="main-button"
      type="submit"
    >
      Done
    </button>
  </div>,
]
`;
